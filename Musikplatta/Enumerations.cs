// <auto-generated/>

namespace SharpWintab.Wintab
{
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CRC</unmanaged>
    /// <unmanaged-short>CRC</unmanaged-short>
    public enum Crc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CRC_MULTIMODE</unmanaged>
        /// <unmanaged-short>CRC_MULTIMODE</unmanaged-short>
        Multimode = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CRC_AGGREGATE</unmanaged>
        /// <unmanaged-short>CRC_AGGREGATE</unmanaged-short>
        Aggregate = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CRC_INVERT</unmanaged>
        /// <unmanaged-short>CRC_INVERT</unmanaged-short>
        Invert = unchecked ((System.Int32)(4))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CSR</unmanaged>
    /// <unmanaged-short>CSR</unmanaged-short>
    public enum Csr : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_NAME</unmanaged>
        /// <unmanaged-short>CSR_NAME</unmanaged-short>
        Name = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_ACTIVE</unmanaged>
        /// <unmanaged-short>CSR_ACTIVE</unmanaged-short>
        Active = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_PKTDATA</unmanaged>
        /// <unmanaged-short>CSR_PKTDATA</unmanaged-short>
        Pktdata = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_BUTTONS</unmanaged>
        /// <unmanaged-short>CSR_BUTTONS</unmanaged-short>
        Buttons = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_BUTTONBITS</unmanaged>
        /// <unmanaged-short>CSR_BUTTONBITS</unmanaged-short>
        Buttonbits = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_BTNNAMES</unmanaged>
        /// <unmanaged-short>CSR_BTNNAMES</unmanaged-short>
        Btnnames = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_BUTTONMAP</unmanaged>
        /// <unmanaged-short>CSR_BUTTONMAP</unmanaged-short>
        Buttonmap = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_SYSBTNMAP</unmanaged>
        /// <unmanaged-short>CSR_SYSBTNMAP</unmanaged-short>
        Sysbtnmap = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_NPBUTTON</unmanaged>
        /// <unmanaged-short>CSR_NPBUTTON</unmanaged-short>
        Npbutton = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_NPBTNMARKS</unmanaged>
        /// <unmanaged-short>CSR_NPBTNMARKS</unmanaged-short>
        Npbtnmarks = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_NPRESPONSE</unmanaged>
        /// <unmanaged-short>CSR_NPRESPONSE</unmanaged-short>
        Npresponse = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_TPBUTTON</unmanaged>
        /// <unmanaged-short>CSR_TPBUTTON</unmanaged-short>
        Tpbutton = unchecked ((System.Int32)(12)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_TPBTNMARKS</unmanaged>
        /// <unmanaged-short>CSR_TPBTNMARKS</unmanaged-short>
        Tpbtnmarks = unchecked ((System.Int32)(13)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_TPRESPONSE</unmanaged>
        /// <unmanaged-short>CSR_TPRESPONSE</unmanaged-short>
        Tpresponse = unchecked ((System.Int32)(14)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_PHYSID</unmanaged>
        /// <unmanaged-short>CSR_PHYSID</unmanaged-short>
        Physid = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_MODE</unmanaged>
        /// <unmanaged-short>CSR_MODE</unmanaged-short>
        Mode = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_MINPKTDATA</unmanaged>
        /// <unmanaged-short>CSR_MINPKTDATA</unmanaged-short>
        Minpktdata = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_MINBUTTONS</unmanaged>
        /// <unmanaged-short>CSR_MINBUTTONS</unmanaged-short>
        Minbuttons = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_CAPABILITIES</unmanaged>
        /// <unmanaged-short>CSR_CAPABILITIES</unmanaged-short>
        Capabilities = unchecked ((System.Int32)(19)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_TYPE</unmanaged>
        /// <unmanaged-short>CSR_TYPE</unmanaged-short>
        Type = unchecked ((System.Int32)(20)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CSR_MAX</unmanaged>
        /// <unmanaged-short>CSR_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(20))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CTX</unmanaged>
    /// <unmanaged-short>CTX</unmanaged-short>
    public enum Ctx : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_NAME</unmanaged>
        /// <unmanaged-short>CTX_NAME</unmanaged-short>
        Name = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OPTIONS</unmanaged>
        /// <unmanaged-short>CTX_OPTIONS</unmanaged-short>
        Options = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_STATUS</unmanaged>
        /// <unmanaged-short>CTX_STATUS</unmanaged-short>
        Status = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_LOCKS</unmanaged>
        /// <unmanaged-short>CTX_LOCKS</unmanaged-short>
        Locks = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_MSGBASE</unmanaged>
        /// <unmanaged-short>CTX_MSGBASE</unmanaged-short>
        Msgbase = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_DEVICE</unmanaged>
        /// <unmanaged-short>CTX_DEVICE</unmanaged-short>
        Device = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_PKTRATE</unmanaged>
        /// <unmanaged-short>CTX_PKTRATE</unmanaged-short>
        Pktrate = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_PKTDATA</unmanaged>
        /// <unmanaged-short>CTX_PKTDATA</unmanaged-short>
        Pktdata = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_PKTMODE</unmanaged>
        /// <unmanaged-short>CTX_PKTMODE</unmanaged-short>
        Pktmode = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_MOVEMASK</unmanaged>
        /// <unmanaged-short>CTX_MOVEMASK</unmanaged-short>
        Movemask = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_BTNDNMASK</unmanaged>
        /// <unmanaged-short>CTX_BTNDNMASK</unmanaged-short>
        Btndnmask = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_BTNUPMASK</unmanaged>
        /// <unmanaged-short>CTX_BTNUPMASK</unmanaged-short>
        Btnupmask = unchecked ((System.Int32)(12)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INORGX</unmanaged>
        /// <unmanaged-short>CTX_INORGX</unmanaged-short>
        Inorgx = unchecked ((System.Int32)(13)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INORGY</unmanaged>
        /// <unmanaged-short>CTX_INORGY</unmanaged-short>
        Inorgy = unchecked ((System.Int32)(14)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INORGZ</unmanaged>
        /// <unmanaged-short>CTX_INORGZ</unmanaged-short>
        Inorgz = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INEXTX</unmanaged>
        /// <unmanaged-short>CTX_INEXTX</unmanaged-short>
        Inextx = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INEXTY</unmanaged>
        /// <unmanaged-short>CTX_INEXTY</unmanaged-short>
        Inexty = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_INEXTZ</unmanaged>
        /// <unmanaged-short>CTX_INEXTZ</unmanaged-short>
        Inextz = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTORGX</unmanaged>
        /// <unmanaged-short>CTX_OUTORGX</unmanaged-short>
        Outorgx = unchecked ((System.Int32)(19)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTORGY</unmanaged>
        /// <unmanaged-short>CTX_OUTORGY</unmanaged-short>
        Outorgy = unchecked ((System.Int32)(20)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTORGZ</unmanaged>
        /// <unmanaged-short>CTX_OUTORGZ</unmanaged-short>
        Outorgz = unchecked ((System.Int32)(21)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTEXTX</unmanaged>
        /// <unmanaged-short>CTX_OUTEXTX</unmanaged-short>
        Outextx = unchecked ((System.Int32)(22)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTEXTY</unmanaged>
        /// <unmanaged-short>CTX_OUTEXTY</unmanaged-short>
        Outexty = unchecked ((System.Int32)(23)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_OUTEXTZ</unmanaged>
        /// <unmanaged-short>CTX_OUTEXTZ</unmanaged-short>
        Outextz = unchecked ((System.Int32)(24)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SENSX</unmanaged>
        /// <unmanaged-short>CTX_SENSX</unmanaged-short>
        Sensx = unchecked ((System.Int32)(25)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SENSY</unmanaged>
        /// <unmanaged-short>CTX_SENSY</unmanaged-short>
        Sensy = unchecked ((System.Int32)(26)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SENSZ</unmanaged>
        /// <unmanaged-short>CTX_SENSZ</unmanaged-short>
        Sensz = unchecked ((System.Int32)(27)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSMODE</unmanaged>
        /// <unmanaged-short>CTX_SYSMODE</unmanaged-short>
        Sysmode = unchecked ((System.Int32)(28)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSORGX</unmanaged>
        /// <unmanaged-short>CTX_SYSORGX</unmanaged-short>
        Sysorgx = unchecked ((System.Int32)(29)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSORGY</unmanaged>
        /// <unmanaged-short>CTX_SYSORGY</unmanaged-short>
        Sysorgy = unchecked ((System.Int32)(30)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSEXTX</unmanaged>
        /// <unmanaged-short>CTX_SYSEXTX</unmanaged-short>
        Sysextx = unchecked ((System.Int32)(31)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSEXTY</unmanaged>
        /// <unmanaged-short>CTX_SYSEXTY</unmanaged-short>
        Sysexty = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSSENSX</unmanaged>
        /// <unmanaged-short>CTX_SYSSENSX</unmanaged-short>
        Syssensx = unchecked ((System.Int32)(33)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_SYSSENSY</unmanaged>
        /// <unmanaged-short>CTX_SYSSENSY</unmanaged-short>
        Syssensy = unchecked ((System.Int32)(34)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CTX_MAX</unmanaged>
        /// <unmanaged-short>CTX_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(34))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CXL</unmanaged>
    /// <unmanaged-short>CXL</unmanaged-short>
    public enum Cxl : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXL_INSIZE</unmanaged>
        /// <unmanaged-short>CXL_INSIZE</unmanaged-short>
        Insize = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXL_INASPECT</unmanaged>
        /// <unmanaged-short>CXL_INASPECT</unmanaged-short>
        Inaspect = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXL_SENSITIVITY</unmanaged>
        /// <unmanaged-short>CXL_SENSITIVITY</unmanaged-short>
        Sensitivity = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXL_MARGIN</unmanaged>
        /// <unmanaged-short>CXL_MARGIN</unmanaged-short>
        Margin = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXL_SYSOUT</unmanaged>
        /// <unmanaged-short>CXL_SYSOUT</unmanaged-short>
        Sysout = unchecked ((System.Int32)(16))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CXO</unmanaged>
    /// <unmanaged-short>CXO</unmanaged-short>
    public enum Cxo : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_SYSTEM</unmanaged>
        /// <unmanaged-short>CXO_SYSTEM</unmanaged-short>
        System = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_PEN</unmanaged>
        /// <unmanaged-short>CXO_PEN</unmanaged-short>
        Pen = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_MESSAGES</unmanaged>
        /// <unmanaged-short>CXO_MESSAGES</unmanaged-short>
        Messages = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_MARGIN</unmanaged>
        /// <unmanaged-short>CXO_MARGIN</unmanaged-short>
        Margin = unchecked ((System.Int32)(32768)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_MGNINSIDE</unmanaged>
        /// <unmanaged-short>CXO_MGNINSIDE</unmanaged-short>
        Mgninside = unchecked ((System.Int32)(16384)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXO_CSRMESSAGES</unmanaged>
        /// <unmanaged-short>CXO_CSRMESSAGES</unmanaged-short>
        Csrmessages = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>CXS</unmanaged>
    /// <unmanaged-short>CXS</unmanaged-short>
    public enum Cxs : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXS_DISABLED</unmanaged>
        /// <unmanaged-short>CXS_DISABLED</unmanaged-short>
        Disabled = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXS_OBSCURED</unmanaged>
        /// <unmanaged-short>CXS_OBSCURED</unmanaged-short>
        Obscured = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>CXS_ONTOP</unmanaged>
        /// <unmanaged-short>CXS_ONTOP</unmanaged-short>
        Ontop = unchecked ((System.Int32)(4))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>DVC</unmanaged>
    /// <unmanaged-short>DVC</unmanaged-short>
    public enum Dvc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_NAME</unmanaged>
        /// <unmanaged-short>DVC_NAME</unmanaged-short>
        Name = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_HARDWARE</unmanaged>
        /// <unmanaged-short>DVC_HARDWARE</unmanaged-short>
        Hardware = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_NCSRTYPES</unmanaged>
        /// <unmanaged-short>DVC_NCSRTYPES</unmanaged-short>
        Ncsrtypes = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_FIRSTCSR</unmanaged>
        /// <unmanaged-short>DVC_FIRSTCSR</unmanaged-short>
        Firstcsr = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_PKTRATE</unmanaged>
        /// <unmanaged-short>DVC_PKTRATE</unmanaged-short>
        Pktrate = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_PKTDATA</unmanaged>
        /// <unmanaged-short>DVC_PKTDATA</unmanaged-short>
        Pktdata = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_PKTMODE</unmanaged>
        /// <unmanaged-short>DVC_PKTMODE</unmanaged-short>
        Pktmode = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_CSRDATA</unmanaged>
        /// <unmanaged-short>DVC_CSRDATA</unmanaged-short>
        Csrdata = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_XMARGIN</unmanaged>
        /// <unmanaged-short>DVC_XMARGIN</unmanaged-short>
        Xmargin = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_YMARGIN</unmanaged>
        /// <unmanaged-short>DVC_YMARGIN</unmanaged-short>
        Ymargin = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_ZMARGIN</unmanaged>
        /// <unmanaged-short>DVC_ZMARGIN</unmanaged-short>
        Zmargin = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_X</unmanaged>
        /// <unmanaged-short>DVC_X</unmanaged-short>
        X = unchecked ((System.Int32)(12)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_Y</unmanaged>
        /// <unmanaged-short>DVC_Y</unmanaged-short>
        Y = unchecked ((System.Int32)(13)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_Z</unmanaged>
        /// <unmanaged-short>DVC_Z</unmanaged-short>
        Z = unchecked ((System.Int32)(14)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_NPRESSURE</unmanaged>
        /// <unmanaged-short>DVC_NPRESSURE</unmanaged-short>
        Npressure = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_TPRESSURE</unmanaged>
        /// <unmanaged-short>DVC_TPRESSURE</unmanaged-short>
        Tpressure = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_ORIENTATION</unmanaged>
        /// <unmanaged-short>DVC_ORIENTATION</unmanaged-short>
        Orientation = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_ROTATION</unmanaged>
        /// <unmanaged-short>DVC_ROTATION</unmanaged-short>
        Rotation = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_PNPID</unmanaged>
        /// <unmanaged-short>DVC_PNPID</unmanaged-short>
        Pnpid = unchecked ((System.Int32)(19)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>DVC_MAX</unmanaged>
        /// <unmanaged-short>DVC_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(19))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>EXT</unmanaged>
    /// <unmanaged-short>EXT</unmanaged-short>
    public enum Ext : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_NAME</unmanaged>
        /// <unmanaged-short>EXT_NAME</unmanaged-short>
        Name = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_TAG</unmanaged>
        /// <unmanaged-short>EXT_TAG</unmanaged-short>
        Tag = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_MASK</unmanaged>
        /// <unmanaged-short>EXT_MASK</unmanaged-short>
        Mask = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_SIZE</unmanaged>
        /// <unmanaged-short>EXT_SIZE</unmanaged-short>
        Size = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_AXES</unmanaged>
        /// <unmanaged-short>EXT_AXES</unmanaged-short>
        Axes = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_DEFAULT</unmanaged>
        /// <unmanaged-short>EXT_DEFAULT</unmanaged-short>
        Default = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_DEFCONTEXT</unmanaged>
        /// <unmanaged-short>EXT_DEFCONTEXT</unmanaged-short>
        Defcontext = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_DEFSYSCTX</unmanaged>
        /// <unmanaged-short>EXT_DEFSYSCTX</unmanaged-short>
        Defsysctx = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_CURSORS</unmanaged>
        /// <unmanaged-short>EXT_CURSORS</unmanaged-short>
        Cursors = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_DEVICES</unmanaged>
        /// <unmanaged-short>EXT_DEVICES</unmanaged-short>
        Devices = unchecked ((System.Int32)(110)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_MAX</unmanaged>
        /// <unmanaged-short>EXT_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(210)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>EXT_DEVICE_CAPS</unmanaged>
        /// <unmanaged-short>EXT_DEVICE_CAPS</unmanaged-short>
        DeviceCaps = unchecked ((System.Int32)(4099))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>FIX</unmanaged>
    /// <unmanaged-short>FIX</unmanaged-short>
    public enum Fix : System.Int32
    {
    }

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>HWC</unmanaged>
    /// <unmanaged-short>HWC</unmanaged-short>
    public enum Hwc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>HWC_INTEGRATED</unmanaged>
        /// <unmanaged-short>HWC_INTEGRATED</unmanaged-short>
        Integrated = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>HWC_TOUCH</unmanaged>
        /// <unmanaged-short>HWC_TOUCH</unmanaged-short>
        Touch = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>HWC_HARDPROX</unmanaged>
        /// <unmanaged-short>HWC_HARDPROX</unmanaged-short>
        Hardprox = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>HWC_PHYSID_CURSORS</unmanaged>
        /// <unmanaged-short>HWC_PHYSID_CURSORS</unmanaged-short>
        PhysidCursors = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>IFC</unmanaged>
    /// <unmanaged-short>IFC</unmanaged-short>
    public enum Ifc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_WINTABID</unmanaged>
        /// <unmanaged-short>IFC_WINTABID</unmanaged-short>
        Wintabid = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_SPECVERSION</unmanaged>
        /// <unmanaged-short>IFC_SPECVERSION</unmanaged-short>
        Specversion = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_IMPLVERSION</unmanaged>
        /// <unmanaged-short>IFC_IMPLVERSION</unmanaged-short>
        Implversion = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_NDEVICES</unmanaged>
        /// <unmanaged-short>IFC_NDEVICES</unmanaged-short>
        Ndevices = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_NCURSORS</unmanaged>
        /// <unmanaged-short>IFC_NCURSORS</unmanaged-short>
        Ncursors = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_NCONTEXTS</unmanaged>
        /// <unmanaged-short>IFC_NCONTEXTS</unmanaged-short>
        Ncontexts = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_CTXOPTIONS</unmanaged>
        /// <unmanaged-short>IFC_CTXOPTIONS</unmanaged-short>
        Ctxoptions = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_CTXSAVESIZE</unmanaged>
        /// <unmanaged-short>IFC_CTXSAVESIZE</unmanaged-short>
        Ctxsavesize = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_NEXTENSIONS</unmanaged>
        /// <unmanaged-short>IFC_NEXTENSIONS</unmanaged-short>
        Nextensions = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_NMANAGERS</unmanaged>
        /// <unmanaged-short>IFC_NMANAGERS</unmanaged-short>
        Nmanagers = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>IFC_MAX</unmanaged>
        /// <unmanaged-short>IFC_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(10))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>LC</unmanaged>
    /// <unmanaged-short>LC</unmanaged-short>
    public enum Lc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_NAMELEN</unmanaged>
        /// <unmanaged-short>LC_NAMELEN</unmanaged-short>
        Namelen = unchecked ((System.Int32)(40)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_NONE</unmanaged>
        /// <unmanaged-short>LC_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_POLYLINE</unmanaged>
        /// <unmanaged-short>LC_POLYLINE</unmanaged-short>
        Polyline = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_MARKER</unmanaged>
        /// <unmanaged-short>LC_MARKER</unmanaged-short>
        Marker = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_POLYMARKER</unmanaged>
        /// <unmanaged-short>LC_POLYMARKER</unmanaged-short>
        Polymarker = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_WIDE</unmanaged>
        /// <unmanaged-short>LC_WIDE</unmanaged-short>
        Wide = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_STYLED</unmanaged>
        /// <unmanaged-short>LC_STYLED</unmanaged-short>
        Styled = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_WIDESTYLED</unmanaged>
        /// <unmanaged-short>LC_WIDESTYLED</unmanaged-short>
        Widestyled = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>LC_INTERIORS</unmanaged>
        /// <unmanaged-short>LC_INTERIORS</unmanaged-short>
        Interiors = unchecked ((System.Int32)(128))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>ORD</unmanaged>
    /// <unmanaged-short>ORD</unmanaged-short>
    public enum Ord : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTInfoA</unmanaged>
        /// <unmanaged-short>ORD_WTInfoA</unmanaged-short>
        WTInfoA = unchecked ((System.Int32)(20)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTInfoW</unmanaged>
        /// <unmanaged-short>ORD_WTInfoW</unmanaged-short>
        WTInfoW = unchecked ((System.Int32)(1020)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTInfo</unmanaged>
        /// <unmanaged-short>ORD_WTInfo</unmanaged-short>
        WTInfo = unchecked ((System.Int32)(1020)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTOpenA</unmanaged>
        /// <unmanaged-short>ORD_WTOpenA</unmanaged-short>
        WTOpenA = unchecked ((System.Int32)(21)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTOpenW</unmanaged>
        /// <unmanaged-short>ORD_WTOpenW</unmanaged-short>
        WTOpenW = unchecked ((System.Int32)(1021)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTOpen</unmanaged>
        /// <unmanaged-short>ORD_WTOpen</unmanaged-short>
        WTOpen = unchecked ((System.Int32)(1021)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTClose</unmanaged>
        /// <unmanaged-short>ORD_WTClose</unmanaged-short>
        WTClose = unchecked ((System.Int32)(22)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTPacketsGet</unmanaged>
        /// <unmanaged-short>ORD_WTPacketsGet</unmanaged-short>
        WTPacketsGet = unchecked ((System.Int32)(23)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTPacket</unmanaged>
        /// <unmanaged-short>ORD_WTPacket</unmanaged-short>
        WTPacket = unchecked ((System.Int32)(24)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTEnable</unmanaged>
        /// <unmanaged-short>ORD_WTEnable</unmanaged-short>
        WTEnable = unchecked ((System.Int32)(40)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTOverlap</unmanaged>
        /// <unmanaged-short>ORD_WTOverlap</unmanaged-short>
        WTOverlap = unchecked ((System.Int32)(41)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTConfig</unmanaged>
        /// <unmanaged-short>ORD_WTConfig</unmanaged-short>
        WTConfig = unchecked ((System.Int32)(60)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTGetA</unmanaged>
        /// <unmanaged-short>ORD_WTGetA</unmanaged-short>
        WTGetA = unchecked ((System.Int32)(61)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTGetW</unmanaged>
        /// <unmanaged-short>ORD_WTGetW</unmanaged-short>
        WTGetW = unchecked ((System.Int32)(1061)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTGet</unmanaged>
        /// <unmanaged-short>ORD_WTGet</unmanaged-short>
        WTGet = unchecked ((System.Int32)(1061)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTSetA</unmanaged>
        /// <unmanaged-short>ORD_WTSetA</unmanaged-short>
        WTSetA = unchecked ((System.Int32)(62)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTSetW</unmanaged>
        /// <unmanaged-short>ORD_WTSetW</unmanaged-short>
        WTSetW = unchecked ((System.Int32)(1062)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTSet</unmanaged>
        /// <unmanaged-short>ORD_WTSet</unmanaged-short>
        WTSet = unchecked ((System.Int32)(1062)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTExtGet</unmanaged>
        /// <unmanaged-short>ORD_WTExtGet</unmanaged-short>
        WTExtGet = unchecked ((System.Int32)(63)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTExtSet</unmanaged>
        /// <unmanaged-short>ORD_WTExtSet</unmanaged-short>
        WTExtSet = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTSave</unmanaged>
        /// <unmanaged-short>ORD_WTSave</unmanaged-short>
        WTSave = unchecked ((System.Int32)(65)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTRestore</unmanaged>
        /// <unmanaged-short>ORD_WTRestore</unmanaged-short>
        WTRestore = unchecked ((System.Int32)(66)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTPacketsPeek</unmanaged>
        /// <unmanaged-short>ORD_WTPacketsPeek</unmanaged-short>
        WTPacketsPeek = unchecked ((System.Int32)(80)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTDataGet</unmanaged>
        /// <unmanaged-short>ORD_WTDataGet</unmanaged-short>
        WTDataGet = unchecked ((System.Int32)(81)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTDataPeek</unmanaged>
        /// <unmanaged-short>ORD_WTDataPeek</unmanaged-short>
        WTDataPeek = unchecked ((System.Int32)(82)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTQueueSizeGet</unmanaged>
        /// <unmanaged-short>ORD_WTQueueSizeGet</unmanaged-short>
        WTQueueSizeGet = unchecked ((System.Int32)(84)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTQueueSizeSet</unmanaged>
        /// <unmanaged-short>ORD_WTQueueSizeSet</unmanaged-short>
        WTQueueSizeSet = unchecked ((System.Int32)(85)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrOpen</unmanaged>
        /// <unmanaged-short>ORD_WTMgrOpen</unmanaged-short>
        WTMgrOpen = unchecked ((System.Int32)(100)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrClose</unmanaged>
        /// <unmanaged-short>ORD_WTMgrClose</unmanaged-short>
        WTMgrClose = unchecked ((System.Int32)(101)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrContextEnum</unmanaged>
        /// <unmanaged-short>ORD_WTMgrContextEnum</unmanaged-short>
        WTMgrContextEnum = unchecked ((System.Int32)(120)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrContextOwner</unmanaged>
        /// <unmanaged-short>ORD_WTMgrContextOwner</unmanaged-short>
        WTMgrContextOwner = unchecked ((System.Int32)(121)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrDefContext</unmanaged>
        /// <unmanaged-short>ORD_WTMgrDefContext</unmanaged-short>
        WTMgrDefContext = unchecked ((System.Int32)(122)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrDefContextEx</unmanaged>
        /// <unmanaged-short>ORD_WTMgrDefContextEx</unmanaged-short>
        WTMgrDefContextEx = unchecked ((System.Int32)(206)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrDeviceConfig</unmanaged>
        /// <unmanaged-short>ORD_WTMgrDeviceConfig</unmanaged-short>
        WTMgrDeviceConfig = unchecked ((System.Int32)(140)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrExt</unmanaged>
        /// <unmanaged-short>ORD_WTMgrExt</unmanaged-short>
        WTMgrExt = unchecked ((System.Int32)(180)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrEnable</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrEnable</unmanaged-short>
        WTMgrCsrEnable = unchecked ((System.Int32)(181)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrButtonMap</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrButtonMap</unmanaged-short>
        WTMgrCsrButtonMap = unchecked ((System.Int32)(182)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrPressureBtnMarks</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrPressureBtnMarks</unmanaged-short>
        WTMgrCsrPressureBtnMarks = unchecked ((System.Int32)(183)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrPressureResponse</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrPressureResponse</unmanaged-short>
        WTMgrCsrPressureResponse = unchecked ((System.Int32)(184)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrExt</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrExt</unmanaged-short>
        WTMgrCsrExt = unchecked ((System.Int32)(185)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTQueuePacketsEx</unmanaged>
        /// <unmanaged-short>ORD_WTQueuePacketsEx</unmanaged-short>
        WTQueuePacketsEx = unchecked ((System.Int32)(200)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrConfigReplaceExA</unmanaged>
        /// <unmanaged-short>ORD_WTMgrConfigReplaceExA</unmanaged-short>
        WTMgrConfigReplaceExA = unchecked ((System.Int32)(202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrConfigReplaceExW</unmanaged>
        /// <unmanaged-short>ORD_WTMgrConfigReplaceExW</unmanaged-short>
        WTMgrConfigReplaceExW = unchecked ((System.Int32)(1202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrConfigReplaceEx</unmanaged>
        /// <unmanaged-short>ORD_WTMgrConfigReplaceEx</unmanaged-short>
        WTMgrConfigReplaceEx = unchecked ((System.Int32)(1202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrPacketHookExA</unmanaged>
        /// <unmanaged-short>ORD_WTMgrPacketHookExA</unmanaged-short>
        WTMgrPacketHookExA = unchecked ((System.Int32)(203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrPacketHookExW</unmanaged>
        /// <unmanaged-short>ORD_WTMgrPacketHookExW</unmanaged-short>
        WTMgrPacketHookExW = unchecked ((System.Int32)(1203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrPacketHookEx</unmanaged>
        /// <unmanaged-short>ORD_WTMgrPacketHookEx</unmanaged-short>
        WTMgrPacketHookEx = unchecked ((System.Int32)(1203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrPacketUnhook</unmanaged>
        /// <unmanaged-short>ORD_WTMgrPacketUnhook</unmanaged-short>
        WTMgrPacketUnhook = unchecked ((System.Int32)(204)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrPacketHookNext</unmanaged>
        /// <unmanaged-short>ORD_WTMgrPacketHookNext</unmanaged-short>
        WTMgrPacketHookNext = unchecked ((System.Int32)(205)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_WTMgrCsrPressureBtnMarksEx</unmanaged>
        /// <unmanaged-short>ORD_WTMgrCsrPressureBtnMarksEx</unmanaged-short>
        WTMgrCsrPressureBtnMarksEx = unchecked ((System.Int32)(201)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>ORD_LANGDRIVER</unmanaged>
        /// <unmanaged-short>ORD_LANGDRIVER</unmanaged-short>
        Langdriver = unchecked ((System.Int32)(1))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>PK</unmanaged>
    /// <unmanaged-short>PK</unmanaged-short>
    public enum Pk : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_CONTEXT</unmanaged>
        /// <unmanaged-short>PK_CONTEXT</unmanaged-short>
        Context = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_STATUS</unmanaged>
        /// <unmanaged-short>PK_STATUS</unmanaged-short>
        Status = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_TIME</unmanaged>
        /// <unmanaged-short>PK_TIME</unmanaged-short>
        Time = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_CHANGED</unmanaged>
        /// <unmanaged-short>PK_CHANGED</unmanaged-short>
        Changed = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_SERIAL_NUMBER</unmanaged>
        /// <unmanaged-short>PK_SERIAL_NUMBER</unmanaged-short>
        SerialNumber = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_CURSOR</unmanaged>
        /// <unmanaged-short>PK_CURSOR</unmanaged-short>
        Cursor = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_BUTTONS</unmanaged>
        /// <unmanaged-short>PK_BUTTONS</unmanaged-short>
        Buttons = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_X</unmanaged>
        /// <unmanaged-short>PK_X</unmanaged-short>
        X = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_Y</unmanaged>
        /// <unmanaged-short>PK_Y</unmanaged-short>
        Y = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_Z</unmanaged>
        /// <unmanaged-short>PK_Z</unmanaged-short>
        Z = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_NORMAL_PRESSURE</unmanaged>
        /// <unmanaged-short>PK_NORMAL_PRESSURE</unmanaged-short>
        NormalPressure = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_TANGENT_PRESSURE</unmanaged>
        /// <unmanaged-short>PK_TANGENT_PRESSURE</unmanaged-short>
        TangentPressure = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_ORIENTATION</unmanaged>
        /// <unmanaged-short>PK_ORIENTATION</unmanaged-short>
        Orientation = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PK_ROTATION</unmanaged>
        /// <unmanaged-short>PK_ROTATION</unmanaged-short>
        Rotation = unchecked ((System.Int32)(8192))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>PKEXT</unmanaged>
    /// <unmanaged-short>PKEXT</unmanaged-short>
    public enum Pkext : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PKEXT_ABSOLUTE</unmanaged>
        /// <unmanaged-short>PKEXT_ABSOLUTE</unmanaged-short>
        Absolute = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>PKEXT_RELATIVE</unmanaged>
        /// <unmanaged-short>PKEXT_RELATIVE</unmanaged-short>
        Relative = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>SBN</unmanaged>
    /// <unmanaged-short>SBN</unmanaged-short>
    public enum Sbn : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_NONE</unmanaged>
        /// <unmanaged-short>SBN_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_LCLICK</unmanaged>
        /// <unmanaged-short>SBN_LCLICK</unmanaged-short>
        Lclick = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_LDBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_LDBLCLICK</unmanaged-short>
        Ldblclick = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_LDRAG</unmanaged>
        /// <unmanaged-short>SBN_LDRAG</unmanaged-short>
        Ldrag = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_RCLICK</unmanaged>
        /// <unmanaged-short>SBN_RCLICK</unmanaged-short>
        Rclick = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_RDBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_RDBLCLICK</unmanaged-short>
        Rdblclick = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_RDRAG</unmanaged>
        /// <unmanaged-short>SBN_RDRAG</unmanaged-short>
        Rdrag = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_MCLICK</unmanaged>
        /// <unmanaged-short>SBN_MCLICK</unmanaged-short>
        Mclick = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_MDBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_MDBLCLICK</unmanaged-short>
        Mdblclick = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_MDRAG</unmanaged>
        /// <unmanaged-short>SBN_MDRAG</unmanaged-short>
        Mdrag = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PTCLICK</unmanaged>
        /// <unmanaged-short>SBN_PTCLICK</unmanaged-short>
        Ptclick = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PTDBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_PTDBLCLICK</unmanaged-short>
        Ptdblclick = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PTDRAG</unmanaged>
        /// <unmanaged-short>SBN_PTDRAG</unmanaged-short>
        Ptdrag = unchecked ((System.Int32)(48)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PNCLICK</unmanaged>
        /// <unmanaged-short>SBN_PNCLICK</unmanaged-short>
        Pnclick = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PNDBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_PNDBLCLICK</unmanaged-short>
        Pndblclick = unchecked ((System.Int32)(80)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_PNDRAG</unmanaged>
        /// <unmanaged-short>SBN_PNDRAG</unmanaged-short>
        Pndrag = unchecked ((System.Int32)(96)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P1CLICK</unmanaged>
        /// <unmanaged-short>SBN_P1CLICK</unmanaged-short>
        P1CLICK = unchecked ((System.Int32)(112)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P1DBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_P1DBLCLICK</unmanaged-short>
        P1DBLCLICK = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P1DRAG</unmanaged>
        /// <unmanaged-short>SBN_P1DRAG</unmanaged-short>
        P1DRAG = unchecked ((System.Int32)(144)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P2CLICK</unmanaged>
        /// <unmanaged-short>SBN_P2CLICK</unmanaged-short>
        P2CLICK = unchecked ((System.Int32)(160)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P2DBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_P2DBLCLICK</unmanaged-short>
        P2DBLCLICK = unchecked ((System.Int32)(176)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P2DRAG</unmanaged>
        /// <unmanaged-short>SBN_P2DRAG</unmanaged-short>
        P2DRAG = unchecked ((System.Int32)(192)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P3CLICK</unmanaged>
        /// <unmanaged-short>SBN_P3CLICK</unmanaged-short>
        P3CLICK = unchecked ((System.Int32)(208)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P3DBLCLICK</unmanaged>
        /// <unmanaged-short>SBN_P3DBLCLICK</unmanaged-short>
        P3DBLCLICK = unchecked ((System.Int32)(224)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>SBN_P3DRAG</unmanaged>
        /// <unmanaged-short>SBN_P3DRAG</unmanaged-short>
        P3DRAG = unchecked ((System.Int32)(240))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>STA</unmanaged>
    /// <unmanaged-short>STA</unmanaged-short>
    public enum Sta : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_CONTEXTS</unmanaged>
        /// <unmanaged-short>STA_CONTEXTS</unmanaged-short>
        Contexts = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_SYSCTXS</unmanaged>
        /// <unmanaged-short>STA_SYSCTXS</unmanaged-short>
        Sysctxs = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_PKTRATE</unmanaged>
        /// <unmanaged-short>STA_PKTRATE</unmanaged-short>
        Pktrate = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_PKTDATA</unmanaged>
        /// <unmanaged-short>STA_PKTDATA</unmanaged-short>
        Pktdata = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_MANAGERS</unmanaged>
        /// <unmanaged-short>STA_MANAGERS</unmanaged-short>
        Managers = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_SYSTEM</unmanaged>
        /// <unmanaged-short>STA_SYSTEM</unmanaged-short>
        System = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_BUTTONUSE</unmanaged>
        /// <unmanaged-short>STA_BUTTONUSE</unmanaged-short>
        Buttonuse = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_SYSBTNUSE</unmanaged>
        /// <unmanaged-short>STA_SYSBTNUSE</unmanaged-short>
        Sysbtnuse = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>STA_MAX</unmanaged>
        /// <unmanaged-short>STA_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>TABLET</unmanaged>
    /// <unmanaged-short>TABLET</unmanaged-short>
    public enum Tablet : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_CONTROLCOUNT</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_CONTROLCOUNT</unmanaged-short>
        PropertyControlcount = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_FUNCCOUNT</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_FUNCCOUNT</unmanaged-short>
        PropertyFunccount = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_AVAILABLE</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_AVAILABLE</unmanaged-short>
        PropertyAvailable = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_MIN</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_MIN</unmanaged-short>
        PropertyMin = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_MAX</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_MAX</unmanaged-short>
        PropertyMax = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_OVERRIDE</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_OVERRIDE</unmanaged-short>
        PropertyOverride = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_OVERRIDE_NAME</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_OVERRIDE_NAME</unmanaged-short>
        PropertyOverrideName = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_OVERRIDE_ICON</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_OVERRIDE_ICON</unmanaged-short>
        PropertyOverrideIcon = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_ICON_WIDTH</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_ICON_WIDTH</unmanaged-short>
        PropertyIconWidth = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_ICON_HEIGHT</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_ICON_HEIGHT</unmanaged-short>
        PropertyIconHeight = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_ICON_FORMAT</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_ICON_FORMAT</unmanaged-short>
        PropertyIconFormat = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_PROPERTY_LOCATION</unmanaged>
        /// <unmanaged-short>TABLET_PROPERTY_LOCATION</unmanaged-short>
        PropertyLocation = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_ICON_FMT_NONE</unmanaged>
        /// <unmanaged-short>TABLET_ICON_FMT_NONE</unmanaged-short>
        IconFmtNone = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_ICON_FMT_4BPP_GRAY</unmanaged>
        /// <unmanaged-short>TABLET_ICON_FMT_4BPP_GRAY</unmanaged-short>
        IconFmt4bppGray = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_LOC_LEFT</unmanaged>
        /// <unmanaged-short>TABLET_LOC_LEFT</unmanaged-short>
        LocLeft = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_LOC_RIGHT</unmanaged>
        /// <unmanaged-short>TABLET_LOC_RIGHT</unmanaged-short>
        LocRight = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_LOC_TOP</unmanaged>
        /// <unmanaged-short>TABLET_LOC_TOP</unmanaged-short>
        LocTop = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_LOC_BOTTOM</unmanaged>
        /// <unmanaged-short>TABLET_LOC_BOTTOM</unmanaged-short>
        LocBottom = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TABLET_LOC_TRANSDUCER</unmanaged>
        /// <unmanaged-short>TABLET_LOC_TRANSDUCER</unmanaged-short>
        LocTransducer = unchecked ((System.Int32)(4))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>TBN</unmanaged>
    /// <unmanaged-short>TBN</unmanaged-short>
    public enum Tbn : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TBN_NONE</unmanaged>
        /// <unmanaged-short>TBN_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TBN_UP</unmanaged>
        /// <unmanaged-short>TBN_UP</unmanaged-short>
        Up = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TBN_DOWN</unmanaged>
        /// <unmanaged-short>TBN_DOWN</unmanaged-short>
        Down = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>TPS</unmanaged>
    /// <unmanaged-short>TPS</unmanaged-short>
    public enum Tps : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TPS_PROXIMITY</unmanaged>
        /// <unmanaged-short>TPS_PROXIMITY</unmanaged-short>
        Proximity = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TPS_QUEUE_ERR</unmanaged>
        /// <unmanaged-short>TPS_QUEUE_ERR</unmanaged-short>
        QueueErr = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TPS_MARGIN</unmanaged>
        /// <unmanaged-short>TPS_MARGIN</unmanaged-short>
        Margin = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TPS_GRAB</unmanaged>
        /// <unmanaged-short>TPS_GRAB</unmanaged-short>
        Grab = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TPS_INVERT</unmanaged>
        /// <unmanaged-short>TPS_INVERT</unmanaged-short>
        Invert = unchecked ((System.Int32)(16))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>TU</unmanaged>
    /// <unmanaged-short>TU</unmanaged-short>
    public enum Tu : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TU_NONE</unmanaged>
        /// <unmanaged-short>TU_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TU_INCHES</unmanaged>
        /// <unmanaged-short>TU_INCHES</unmanaged-short>
        Inches = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TU_CENTIMETERS</unmanaged>
        /// <unmanaged-short>TU_CENTIMETERS</unmanaged-short>
        Centimeters = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>TU_CIRCLE</unmanaged>
        /// <unmanaged-short>TU_CIRCLE</unmanaged-short>
        Circle = unchecked ((System.Int32)(3))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WT</unmanaged>
    /// <unmanaged-short>WT</unmanaged-short>
    public enum Wt : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_DEFBASE</unmanaged>
        /// <unmanaged-short>WT_DEFBASE</unmanaged-short>
        Defbase = unchecked ((System.Int32)(32752)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_MAXOFFSET</unmanaged>
        /// <unmanaged-short>WT_MAXOFFSET</unmanaged-short>
        Maxoffset = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_PACKET</unmanaged>
        /// <unmanaged-short>WT_PACKET</unmanaged-short>
        Packet = unchecked ((System.Int32)(32752)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_CTXOPEN</unmanaged>
        /// <unmanaged-short>WT_CTXOPEN</unmanaged-short>
        Ctxopen = unchecked ((System.Int32)(32753)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_CTXCLOSE</unmanaged>
        /// <unmanaged-short>WT_CTXCLOSE</unmanaged-short>
        Ctxclose = unchecked ((System.Int32)(32754)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_CTXUPDATE</unmanaged>
        /// <unmanaged-short>WT_CTXUPDATE</unmanaged-short>
        Ctxupdate = unchecked ((System.Int32)(32755)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_CTXOVERLAP</unmanaged>
        /// <unmanaged-short>WT_CTXOVERLAP</unmanaged-short>
        Ctxoverlap = unchecked ((System.Int32)(32756)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_PROXIMITY</unmanaged>
        /// <unmanaged-short>WT_PROXIMITY</unmanaged-short>
        Proximity = unchecked ((System.Int32)(32757)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_INFOCHANGE</unmanaged>
        /// <unmanaged-short>WT_INFOCHANGE</unmanaged-short>
        Infochange = unchecked ((System.Int32)(32758)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_CSRCHANGE</unmanaged>
        /// <unmanaged-short>WT_CSRCHANGE</unmanaged-short>
        Csrchange = unchecked ((System.Int32)(32759)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_PACKETEXT</unmanaged>
        /// <unmanaged-short>WT_PACKETEXT</unmanaged-short>
        Packetext = unchecked ((System.Int32)(32760)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_MAX</unmanaged>
        /// <unmanaged-short>WT_MAX</unmanaged-short>
        Max = unchecked ((System.Int32)(32767)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEDEFAULT</unmanaged>
        /// <unmanaged-short>WT_EXECUTEDEFAULT</unmanaged-short>
        Executedefault = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINIOTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINIOTHREAD</unmanaged-short>
        Executeiniothread = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINUITHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINUITHREAD</unmanaged-short>
        Executeinuithread = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINWAITTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINWAITTHREAD</unmanaged-short>
        Executeinwaitthread = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEONLYONCE</unmanaged>
        /// <unmanaged-short>WT_EXECUTEONLYONCE</unmanaged-short>
        Executeonlyonce = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINTIMERTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINTIMERTHREAD</unmanaged-short>
        Executeintimerthread = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTELONGFUNCTION</unmanaged>
        /// <unmanaged-short>WT_EXECUTELONGFUNCTION</unmanaged-short>
        Executelongfunction = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINPERSISTENTIOTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINPERSISTENTIOTHREAD</unmanaged-short>
        Executeinpersistentiothread = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINPERSISTENTTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINPERSISTENTTHREAD</unmanaged-short>
        Executeinpersistentthread = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_TRANSFER_IMPERSONATION</unmanaged>
        /// <unmanaged-short>WT_TRANSFER_IMPERSONATION</unmanaged-short>
        TransferImpersonation = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEINLONGTHREAD</unmanaged>
        /// <unmanaged-short>WT_EXECUTEINLONGTHREAD</unmanaged-short>
        Executeinlongthread = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WT_EXECUTEDELETEWAIT</unmanaged>
        /// <unmanaged-short>WT_EXECUTEDELETEWAIT</unmanaged-short>
        Executedeletewait = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WTDC</unmanaged>
    /// <unmanaged-short>WTDC</unmanaged-short>
    public enum Wtdc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTDC_NONE</unmanaged>
        /// <unmanaged-short>WTDC_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTDC_CANCEL</unmanaged>
        /// <unmanaged-short>WTDC_CANCEL</unmanaged-short>
        Cancel = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTDC_OK</unmanaged>
        /// <unmanaged-short>WTDC_OK</unmanaged-short>
        Ok = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTDC_RESTART</unmanaged>
        /// <unmanaged-short>WTDC_RESTART</unmanaged-short>
        Restart = unchecked ((System.Int32)(3))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WTH</unmanaged>
    /// <unmanaged-short>WTH</unmanaged-short>
    public enum Wth : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTH_PLAYBACK</unmanaged>
        /// <unmanaged-short>WTH_PLAYBACK</unmanaged-short>
        Playback = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTH_RECORD</unmanaged>
        /// <unmanaged-short>WTH_RECORD</unmanaged-short>
        Record = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WTHC</unmanaged>
    /// <unmanaged-short>WTHC</unmanaged-short>
    public enum Wthc : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_GETLPLPFN</unmanaged>
        /// <unmanaged-short>WTHC_GETLPLPFN</unmanaged-short>
        Getlplpfn = unchecked ((System.Int32)(-3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_LPLPFNNEXT</unmanaged>
        /// <unmanaged-short>WTHC_LPLPFNNEXT</unmanaged-short>
        Lplpfnnext = unchecked ((System.Int32)(-2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_LPFNNEXT</unmanaged>
        /// <unmanaged-short>WTHC_LPFNNEXT</unmanaged-short>
        Lpfnnext = unchecked ((System.Int32)(-1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_ACTION</unmanaged>
        /// <unmanaged-short>WTHC_ACTION</unmanaged-short>
        Action = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_GETNEXT</unmanaged>
        /// <unmanaged-short>WTHC_GETNEXT</unmanaged-short>
        Getnext = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTHC_SKIP</unmanaged>
        /// <unmanaged-short>WTHC_SKIP</unmanaged-short>
        Skip = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WTI</unmanaged>
    /// <unmanaged-short>WTI</unmanaged-short>
    public enum Wti : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_INTERFACE</unmanaged>
        /// <unmanaged-short>WTI_INTERFACE</unmanaged-short>
        Interface = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_STATUS</unmanaged>
        /// <unmanaged-short>WTI_STATUS</unmanaged-short>
        Status = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_DEFCONTEXT</unmanaged>
        /// <unmanaged-short>WTI_DEFCONTEXT</unmanaged-short>
        Defcontext = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_DEFSYSCTX</unmanaged>
        /// <unmanaged-short>WTI_DEFSYSCTX</unmanaged-short>
        Defsysctx = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_DDCTXS</unmanaged>
        /// <unmanaged-short>WTI_DDCTXS</unmanaged-short>
        Ddctxs = unchecked ((System.Int32)(400)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_DSCTXS</unmanaged>
        /// <unmanaged-short>WTI_DSCTXS</unmanaged-short>
        Dsctxs = unchecked ((System.Int32)(500)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_DEVICES</unmanaged>
        /// <unmanaged-short>WTI_DEVICES</unmanaged-short>
        Devices = unchecked ((System.Int32)(100)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_CURSORS</unmanaged>
        /// <unmanaged-short>WTI_CURSORS</unmanaged-short>
        Cursors = unchecked ((System.Int32)(200)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTI_EXTENSIONS</unmanaged>
        /// <unmanaged-short>WTI_EXTENSIONS</unmanaged-short>
        Extensions = unchecked ((System.Int32)(300))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>WTX</unmanaged>
    /// <unmanaged-short>WTX</unmanaged-short>
    public enum Wtx : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_OBT</unmanaged>
        /// <unmanaged-short>WTX_OBT</unmanaged-short>
        Obt = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_FKEYS</unmanaged>
        /// <unmanaged-short>WTX_FKEYS</unmanaged-short>
        Fkeys = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_TILT</unmanaged>
        /// <unmanaged-short>WTX_TILT</unmanaged-short>
        Tilt = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_CSRMASK</unmanaged>
        /// <unmanaged-short>WTX_CSRMASK</unmanaged-short>
        Csrmask = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_XBTNMASK</unmanaged>
        /// <unmanaged-short>WTX_XBTNMASK</unmanaged-short>
        Xbtnmask = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_EXPKEYS</unmanaged>
        /// <unmanaged-short>WTX_EXPKEYS</unmanaged-short>
        Expkeys = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_TOUCHSTRIP</unmanaged>
        /// <unmanaged-short>WTX_TOUCHSTRIP</unmanaged-short>
        Touchstrip = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_TOUCHRING</unmanaged>
        /// <unmanaged-short>WTX_TOUCHRING</unmanaged-short>
        Touchring = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WTX_EXPKEYS2</unmanaged>
        /// <unmanaged-short>WTX_EXPKEYS2</unmanaged-short>
        Expkeys2 = unchecked ((System.Int32)(8))}
}