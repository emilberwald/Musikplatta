/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_SwigWintab(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_SwigWintab(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_SwigWintab(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


#include "Wintab-getprocaddress.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_DEFBASE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x7FF0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_MAXOFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0xF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_PACKET_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +0));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_CTXOPEN_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_CTXCLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +2));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_CTXUPDATE_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +3));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_CTXOVERLAP_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +4));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_PROXIMITY_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +5));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_INFOCHANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +6));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_CSRCHANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +7));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_PACKETEXT_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +8));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WT_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(((0x7FF0) +0xF));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_CONTEXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_TIME_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_CHANGED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_SERIAL_NUMBER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_CURSOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_BUTTONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0040);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_X_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0080);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_Y_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_Z_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_NORMAL_PRESSURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0400);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_TANGENT_PRESSURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0800);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_ORIENTATION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PK_ROTATION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x2000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_AXIS_axMin_set(void * jarg1, long jarg2) {
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagAXIS *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->axMin = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_AXIS_axMin_get(void * jarg1) {
  long jresult ;
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  LONG result;
  
  arg1 = (tagAXIS *)jarg1; 
  result = (LONG) ((arg1)->axMin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_AXIS_axMax_set(void * jarg1, long jarg2) {
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagAXIS *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->axMax = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_AXIS_axMax_get(void * jarg1) {
  long jresult ;
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  LONG result;
  
  arg1 = (tagAXIS *)jarg1; 
  result = (LONG) ((arg1)->axMax);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_AXIS_axUnits_set(void * jarg1, unsigned int jarg2) {
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagAXIS *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->axUnits = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_AXIS_axUnits_get(void * jarg1) {
  unsigned int jresult ;
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  UINT result;
  
  arg1 = (tagAXIS *)jarg1; 
  result = (UINT) ((arg1)->axUnits);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_AXIS_axResolution_set(void * jarg1, unsigned long jarg2) {
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagAXIS *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->axResolution = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_AXIS_axResolution_get(void * jarg1) {
  unsigned long jresult ;
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  FIX32 result;
  
  arg1 = (tagAXIS *)jarg1; 
  result = (FIX32) ((arg1)->axResolution);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_AXIS() {
  void * jresult ;
  tagAXIS *result = 0 ;
  
  result = (tagAXIS *)new tagAXIS();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_AXIS(void * jarg1) {
  tagAXIS *arg1 = (tagAXIS *) 0 ;
  
  arg1 = (tagAXIS *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TU_NONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TU_INCHES_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TU_CENTIMETERS_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TU_CIRCLE_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_NONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_LCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x01);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_LDBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x02);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_LDRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x03);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_RCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x04);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_RDBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x05);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_RDRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x06);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_MCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x07);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_MDBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x08);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_MDRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x09);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PTCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PTDBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PTDRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PNCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PNDBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_PNDRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x60);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P1CLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P1DBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P1DRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P2CLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0xA0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P2DBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0xB0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P2DRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0xC0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P3CLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0xD0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P3DBLCLICK_get() {
  int jresult ;
  int result;
  
  result = (int)(0xE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_SBN_P3DRAG_get() {
  int jresult ;
  int result;
  
  result = (int)(0xF0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_HWC_INTEGRATED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_HWC_TOUCH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_HWC_HARDPROX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_HWC_PHYSID_CURSORS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CRC_MULTIMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CRC_AGGREGATE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CRC_INVERT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_INTERFACE_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_WINTABID_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_SPECVERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_IMPLVERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_NDEVICES_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_NCURSORS_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_NCONTEXTS_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_CTXOPTIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_CTXSAVESIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_NEXTENSIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_NMANAGERS_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_IFC_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_CONTEXTS_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_SYSCTXS_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_PKTRATE_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_PKTDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_MANAGERS_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_BUTTONUSE_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_SYSBTNUSE_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_STA_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_DEFCONTEXT_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_DEFSYSCTX_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_DDCTXS_get() {
  int jresult ;
  int result;
  
  result = (int)(400);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_DSCTXS_get() {
  int jresult ;
  int result;
  
  result = (int)(500);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OPTIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_LOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_MSGBASE_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_DEVICE_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_PKTRATE_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_PKTDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_PKTMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_MOVEMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_BTNDNMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_BTNUPMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INORGX_get() {
  int jresult ;
  int result;
  
  result = (int)(13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INORGY_get() {
  int jresult ;
  int result;
  
  result = (int)(14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INORGZ_get() {
  int jresult ;
  int result;
  
  result = (int)(15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INEXTX_get() {
  int jresult ;
  int result;
  
  result = (int)(16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INEXTY_get() {
  int jresult ;
  int result;
  
  result = (int)(17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_INEXTZ_get() {
  int jresult ;
  int result;
  
  result = (int)(18);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTORGX_get() {
  int jresult ;
  int result;
  
  result = (int)(19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTORGY_get() {
  int jresult ;
  int result;
  
  result = (int)(20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTORGZ_get() {
  int jresult ;
  int result;
  
  result = (int)(21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTEXTX_get() {
  int jresult ;
  int result;
  
  result = (int)(22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTEXTY_get() {
  int jresult ;
  int result;
  
  result = (int)(23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_OUTEXTZ_get() {
  int jresult ;
  int result;
  
  result = (int)(24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SENSX_get() {
  int jresult ;
  int result;
  
  result = (int)(25);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SENSY_get() {
  int jresult ;
  int result;
  
  result = (int)(26);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SENSZ_get() {
  int jresult ;
  int result;
  
  result = (int)(27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSORGX_get() {
  int jresult ;
  int result;
  
  result = (int)(29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSORGY_get() {
  int jresult ;
  int result;
  
  result = (int)(30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSEXTX_get() {
  int jresult ;
  int result;
  
  result = (int)(31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSEXTY_get() {
  int jresult ;
  int result;
  
  result = (int)(32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSSENSX_get() {
  int jresult ;
  int result;
  
  result = (int)(33);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_SYSSENSY_get() {
  int jresult ;
  int result;
  
  result = (int)(34);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CTX_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(34);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_DEVICES_get() {
  int jresult ;
  int result;
  
  result = (int)(100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_HARDWARE_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_NCSRTYPES_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_FIRSTCSR_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_PKTRATE_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_PKTDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_PKTMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_CSRDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_XMARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_YMARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_ZMARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_X_get() {
  int jresult ;
  int result;
  
  result = (int)(12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_Y_get() {
  int jresult ;
  int result;
  
  result = (int)(13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_Z_get() {
  int jresult ;
  int result;
  
  result = (int)(14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_NPRESSURE_get() {
  int jresult ;
  int result;
  
  result = (int)(15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_TPRESSURE_get() {
  int jresult ;
  int result;
  
  result = (int)(16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_ORIENTATION_get() {
  int jresult ;
  int result;
  
  result = (int)(17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_ROTATION_get() {
  int jresult ;
  int result;
  
  result = (int)(18);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_PNPID_get() {
  int jresult ;
  int result;
  
  result = (int)(19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_DVC_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_CURSORS_get() {
  int jresult ;
  int result;
  
  result = (int)(200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_ACTIVE_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_PKTDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_BUTTONS_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_BUTTONBITS_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_BTNNAMES_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_BUTTONMAP_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_SYSBTNMAP_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_NPBUTTON_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_NPBTNMARKS_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_NPRESPONSE_get() {
  int jresult ;
  int result;
  
  result = (int)(11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_TPBUTTON_get() {
  int jresult ;
  int result;
  
  result = (int)(12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_TPBTNMARKS_get() {
  int jresult ;
  int result;
  
  result = (int)(13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_TPRESPONSE_get() {
  int jresult ;
  int result;
  
  result = (int)(14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_PHYSID_get() {
  int jresult ;
  int result;
  
  result = (int)(15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_MINPKTDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_MINBUTTONS_get() {
  int jresult ;
  int result;
  
  result = (int)(18);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_CAPABILITIES_get() {
  int jresult ;
  int result;
  
  result = (int)(19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CSR_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTI_EXTENSIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(300);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_TAG_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_MASK_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_AXES_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_DEFAULT_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_DEFCONTEXT_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_DEFSYSCTX_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_CURSORS_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_DEVICES_get() {
  int jresult ;
  int result;
  
  result = (int)(110);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_EXT_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(210);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LCNAMELEN_get() {
  int jresult ;
  int result;
  
  result = (int)(40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LC_NAMELEN_get() {
  int jresult ;
  int result;
  
  result = (int)(40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcName_set(void * jarg1, char * jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  char *arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->lcName, (const char *)arg2, 40-1);
      arg1->lcName[40-1] = 0;
    } else {
      arg1->lcName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcName_get(void * jarg1) {
  char * jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  char *result = 0 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (char *)(char *) ((arg1)->lcName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOptions_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcOptions = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOptions_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcOptions);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcStatus_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcStatus = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcStatus_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcLocks_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcLocks = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcLocks_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcLocks);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcMsgBase_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcMsgBase = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcMsgBase_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcMsgBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcDevice_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcDevice = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcDevice_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcDevice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktRate_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcPktRate = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktRate_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (UINT) ((arg1)->lcPktRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktData_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcPktData = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktData_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (WTPKT) ((arg1)->lcPktData);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktMode_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcPktMode = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcPktMode_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (WTPKT) ((arg1)->lcPktMode);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcMoveMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcMoveMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcMoveMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (WTPKT) ((arg1)->lcMoveMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcBtnDnMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->lcBtnDnMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcBtnDnMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  DWORD result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (DWORD) ((arg1)->lcBtnDnMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcBtnUpMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->lcBtnUpMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcBtnUpMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  DWORD result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (DWORD) ((arg1)->lcBtnUpMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInOrgZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcInExtZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcInExtZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutOrgZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcOutExtZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensX_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensX = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensX_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (FIX32) ((arg1)->lcSensX);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensY_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensY = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensY_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (FIX32) ((arg1)->lcSensY);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensZ_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensZ = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSensZ_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (FIX32) ((arg1)->lcSensZ);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysMode_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  BOOL arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (BOOL)jarg2; 
  if (arg1) (arg1)->lcSysMode = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysMode_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  BOOL result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (BOOL) ((arg1)->lcSysMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysOrgX_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysOrgX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysOrgX_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (int) ((arg1)->lcSysOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysOrgY_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysOrgY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysOrgY_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (int) ((arg1)->lcSysOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysExtX_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysExtX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysExtX_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (int) ((arg1)->lcSysExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysExtY_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysExtY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysExtY_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (int) ((arg1)->lcSysExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysSensX_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSysSensX = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysSensX_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (FIX32) ((arg1)->lcSysSensX);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysSensY_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSysSensY = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTA_lcSysSensY_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  result = (FIX32) ((arg1)->lcSysSensY);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_LOGCONTEXTA() {
  void * jresult ;
  tagLOGCONTEXTA *result = 0 ;
  
  result = (tagLOGCONTEXTA *)new tagLOGCONTEXTA();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_LOGCONTEXTA(void * jarg1) {
  tagLOGCONTEXTA *arg1 = (tagLOGCONTEXTA *) 0 ;
  
  arg1 = (tagLOGCONTEXTA *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcName_set(void * jarg1, void * jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WCHAR *arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (WCHAR *)jarg2; 
  {
    size_t ii;
    WCHAR *b = (WCHAR *) arg1->lcName;
    for (ii = 0; ii < (size_t)40; ii++) b[ii] = *((WCHAR *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcName_get(void * jarg1) {
  void * jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WCHAR *result = 0 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (WCHAR *)(WCHAR *) ((arg1)->lcName);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOptions_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcOptions = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOptions_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcOptions);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcStatus_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcStatus = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcStatus_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcLocks_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcLocks = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcLocks_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcLocks);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcMsgBase_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcMsgBase = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcMsgBase_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcMsgBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcDevice_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcDevice = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcDevice_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcDevice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktRate_set(void * jarg1, unsigned int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->lcPktRate = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktRate_get(void * jarg1) {
  unsigned int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  UINT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (UINT) ((arg1)->lcPktRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktData_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcPktData = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktData_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (WTPKT) ((arg1)->lcPktData);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktMode_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcPktMode = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcPktMode_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (WTPKT) ((arg1)->lcPktMode);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcMoveMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->lcMoveMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcMoveMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  WTPKT result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (WTPKT) ((arg1)->lcMoveMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcBtnDnMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->lcBtnDnMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcBtnDnMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  DWORD result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (DWORD) ((arg1)->lcBtnDnMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcBtnUpMask_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->lcBtnUpMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcBtnUpMask_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  DWORD result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (DWORD) ((arg1)->lcBtnUpMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInOrgZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInOrgZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInOrgZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcInExtZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcInExtZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcInExtZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutOrgZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutOrgZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutOrgZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtX_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtX_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtY_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtY_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtZ_set(void * jarg1, long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->lcOutExtZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcOutExtZ_get(void * jarg1) {
  long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  LONG result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (LONG) ((arg1)->lcOutExtZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensX_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensX = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensX_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (FIX32) ((arg1)->lcSensX);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensY_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensY = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensY_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (FIX32) ((arg1)->lcSensY);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensZ_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSensZ = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSensZ_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (FIX32) ((arg1)->lcSensZ);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysMode_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  BOOL arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (BOOL)jarg2; 
  if (arg1) (arg1)->lcSysMode = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysMode_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  BOOL result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (BOOL) ((arg1)->lcSysMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysOrgX_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysOrgX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysOrgX_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (int) ((arg1)->lcSysOrgX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysOrgY_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysOrgY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysOrgY_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (int) ((arg1)->lcSysOrgY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysExtX_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysExtX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysExtX_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (int) ((arg1)->lcSysExtX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysExtY_set(void * jarg1, int jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lcSysExtY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysExtY_get(void * jarg1) {
  int jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  int result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (int) ((arg1)->lcSysExtY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysSensX_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSysSensX = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysSensX_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (FIX32) ((arg1)->lcSysSensX);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysSensY_set(void * jarg1, unsigned long jarg2) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 arg2 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  arg2 = (FIX32)jarg2; 
  if (arg1) (arg1)->lcSysSensY = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_LOGCONTEXTW_lcSysSensY_get(void * jarg1) {
  unsigned long jresult ;
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  FIX32 result;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  result = (FIX32) ((arg1)->lcSysSensY);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_LOGCONTEXTW() {
  void * jresult ;
  tagLOGCONTEXTW *result = 0 ;
  
  result = (tagLOGCONTEXTW *)new tagLOGCONTEXTW();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_LOGCONTEXTW(void * jarg1) {
  tagLOGCONTEXTW *arg1 = (tagLOGCONTEXTW *) 0 ;
  
  arg1 = (tagLOGCONTEXTW *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_PEN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_MESSAGES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_MGNINSIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x4000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXO_CSRMESSAGES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXS_DISABLED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXS_OBSCURED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXS_ONTOP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXL_INSIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXL_INASPECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXL_SENSITIVITY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXL_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_CXL_SYSOUT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TPS_PROXIMITY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TPS_QUEUE_ERR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TPS_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TPS_GRAB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TPS_INVERT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ORIENTATION_orAzimuth_set(void * jarg1, int jarg2) {
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagORIENTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->orAzimuth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORIENTATION_orAzimuth_get(void * jarg1) {
  int jresult ;
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int result;
  
  arg1 = (tagORIENTATION *)jarg1; 
  result = (int) ((arg1)->orAzimuth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ORIENTATION_orAltitude_set(void * jarg1, int jarg2) {
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagORIENTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->orAltitude = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORIENTATION_orAltitude_get(void * jarg1) {
  int jresult ;
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int result;
  
  arg1 = (tagORIENTATION *)jarg1; 
  result = (int) ((arg1)->orAltitude);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ORIENTATION_orTwist_set(void * jarg1, int jarg2) {
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagORIENTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->orTwist = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORIENTATION_orTwist_get(void * jarg1) {
  int jresult ;
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  int result;
  
  arg1 = (tagORIENTATION *)jarg1; 
  result = (int) ((arg1)->orTwist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_ORIENTATION() {
  void * jresult ;
  tagORIENTATION *result = 0 ;
  
  result = (tagORIENTATION *)new tagORIENTATION();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_ORIENTATION(void * jarg1) {
  tagORIENTATION *arg1 = (tagORIENTATION *) 0 ;
  
  arg1 = (tagORIENTATION *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ROTATION_roPitch_set(void * jarg1, int jarg2) {
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagROTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->roPitch = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ROTATION_roPitch_get(void * jarg1) {
  int jresult ;
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int result;
  
  arg1 = (tagROTATION *)jarg1; 
  result = (int) ((arg1)->roPitch);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ROTATION_roRoll_set(void * jarg1, int jarg2) {
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagROTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->roRoll = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ROTATION_roRoll_get(void * jarg1) {
  int jresult ;
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int result;
  
  arg1 = (tagROTATION *)jarg1; 
  result = (int) ((arg1)->roRoll);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_ROTATION_roYaw_set(void * jarg1, int jarg2) {
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int arg2 ;
  
  arg1 = (tagROTATION *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->roYaw = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ROTATION_roYaw_get(void * jarg1) {
  int jresult ;
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  int result;
  
  arg1 = (tagROTATION *)jarg1; 
  result = (int) ((arg1)->roYaw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_ROTATION() {
  void * jresult ;
  tagROTATION *result = 0 ;
  
  result = (tagROTATION *)new tagROTATION();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_ROTATION(void * jarg1) {
  tagROTATION *arg1 = (tagROTATION *) 0 ;
  
  arg1 = (tagROTATION *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TBN_NONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TBN_UP_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TBN_DOWN_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDC_NONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDC_CANCEL_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDC_OK_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDC_RESTART_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTH_PLAYBACK_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTH_RECORD_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_GETLPLPFN_get() {
  int jresult ;
  int result;
  
  result = (int)((-3));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_LPLPFNNEXT_get() {
  int jresult ;
  int result;
  
  result = (int)((-2));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_LPFNNEXT_get() {
  int jresult ;
  int result;
  
  result = (int)((-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_ACTION_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_GETNEXT_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTHC_SKIP_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PKEXT_ABSOLUTE_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PKEXT_RELATIVE_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_OBT_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_FKEYS_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_TILT_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_CSRMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_XBTNMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_EXPKEYS_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_TOUCHSTRIP_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_TOUCHRING_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTX_EXPKEYS2_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_XBTNMASK_xBtnDnMask_set(void * jarg1, void * jarg2) {
  tagXBTNMASK *arg1 = (tagXBTNMASK *) 0 ;
  BYTE *arg2 ;
  
  arg1 = (tagXBTNMASK *)jarg1; 
  arg2 = (BYTE *)jarg2; 
  {
    size_t ii;
    BYTE *b = (BYTE *) arg1->xBtnDnMask;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((BYTE *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_XBTNMASK_xBtnDnMask_get(void * jarg1) {
  void * jresult ;
  tagXBTNMASK *arg1 = (tagXBTNMASK *) 0 ;
  BYTE *result = 0 ;
  
  arg1 = (tagXBTNMASK *)jarg1; 
  result = (BYTE *)(BYTE *) ((arg1)->xBtnDnMask);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_XBTNMASK_xBtnUpMask_set(void * jarg1, void * jarg2) {
  tagXBTNMASK *arg1 = (tagXBTNMASK *) 0 ;
  BYTE *arg2 ;
  
  arg1 = (tagXBTNMASK *)jarg1; 
  arg2 = (BYTE *)jarg2; 
  {
    size_t ii;
    BYTE *b = (BYTE *) arg1->xBtnUpMask;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((BYTE *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_XBTNMASK_xBtnUpMask_get(void * jarg1) {
  void * jresult ;
  tagXBTNMASK *arg1 = (tagXBTNMASK *) 0 ;
  BYTE *result = 0 ;
  
  arg1 = (tagXBTNMASK *)jarg1; 
  result = (BYTE *)(BYTE *) ((arg1)->xBtnUpMask);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_XBTNMASK() {
  void * jresult ;
  tagXBTNMASK *result = 0 ;
  
  result = (tagXBTNMASK *)new tagXBTNMASK();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_XBTNMASK(void * jarg1) {
  tagXBTNMASK *arg1 = (tagXBTNMASK *) 0 ;
  
  arg1 = (tagXBTNMASK *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_TILT_tiltX_set(void * jarg1, int jarg2) {
  tagTILT *arg1 = (tagTILT *) 0 ;
  int arg2 ;
  
  arg1 = (tagTILT *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tiltX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TILT_tiltX_get(void * jarg1) {
  int jresult ;
  tagTILT *arg1 = (tagTILT *) 0 ;
  int result;
  
  arg1 = (tagTILT *)jarg1; 
  result = (int) ((arg1)->tiltX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_TILT_tiltY_set(void * jarg1, int jarg2) {
  tagTILT *arg1 = (tagTILT *) 0 ;
  int arg2 ;
  
  arg1 = (tagTILT *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tiltY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TILT_tiltY_get(void * jarg1) {
  int jresult ;
  tagTILT *arg1 = (tagTILT *) 0 ;
  int result;
  
  arg1 = (tagTILT *)jarg1; 
  result = (int) ((arg1)->tiltY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_TILT() {
  void * jresult ;
  tagTILT *result = 0 ;
  
  result = (tagTILT *)new tagTILT();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_TILT(void * jarg1) {
  tagTILT *arg1 = (tagTILT *) 0 ;
  
  arg1 = (tagTILT *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nContext_set(void * jarg1, void * jarg2) {
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  HCTX arg2 ;
  HCTX *argp2 ;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  argp2 = (HCTX *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->nContext = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nContext_get(void * jarg1) {
  void * jresult ;
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  HCTX result;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  result =  ((arg1)->nContext);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nStatus_set(void * jarg1, unsigned int jarg2) {
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->nStatus = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nStatus_get(void * jarg1) {
  unsigned int jresult ;
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  UINT result;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  result = (UINT) ((arg1)->nStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nTime_set(void * jarg1, unsigned long jarg2) {
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->nTime = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nTime_get(void * jarg1) {
  unsigned long jresult ;
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  DWORD result;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  result = (DWORD) ((arg1)->nTime);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nSerialNumber_set(void * jarg1, unsigned int jarg2) {
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->nSerialNumber = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_EXTENSIONBASE_nSerialNumber_get(void * jarg1) {
  unsigned int jresult ;
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  UINT result;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  result = (UINT) ((arg1)->nSerialNumber);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_EXTENSIONBASE() {
  void * jresult ;
  tagEXTENSIONBASE *result = 0 ;
  
  result = (tagEXTENSIONBASE *)new tagEXTENSIONBASE();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_EXTENSIONBASE(void * jarg1) {
  tagEXTENSIONBASE *arg1 = (tagEXTENSIONBASE *) 0 ;
  
  arg1 = (tagEXTENSIONBASE *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nTablet_set(void * jarg1, unsigned char jarg2) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nTablet = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nTablet_get(void * jarg1) {
  unsigned char jresult ;
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  result = (BYTE) ((arg1)->nTablet);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nControl_set(void * jarg1, unsigned char jarg2) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nControl = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nControl_get(void * jarg1) {
  unsigned char jresult ;
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  result = (BYTE) ((arg1)->nControl);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nLocation_set(void * jarg1, unsigned char jarg2) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nLocation = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nLocation_get(void * jarg1) {
  unsigned char jresult ;
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  result = (BYTE) ((arg1)->nLocation);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nReserved_set(void * jarg1, unsigned char jarg2) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nReserved = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nReserved_get(void * jarg1) {
  unsigned char jresult ;
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  result = (BYTE) ((arg1)->nReserved);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nState_set(void * jarg1, unsigned long jarg2) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->nState = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_EXPKEYSDATA_nState_get(void * jarg1) {
  unsigned long jresult ;
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  DWORD result;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  result = (DWORD) ((arg1)->nState);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_EXPKEYSDATA() {
  void * jresult ;
  tagEXPKEYSDATA *result = 0 ;
  
  result = (tagEXPKEYSDATA *)new tagEXPKEYSDATA();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_EXPKEYSDATA(void * jarg1) {
  tagEXPKEYSDATA *arg1 = (tagEXPKEYSDATA *) 0 ;
  
  arg1 = (tagEXPKEYSDATA *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_SLIDERDATA_nTablet_set(void * jarg1, unsigned char jarg2) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nTablet = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_SLIDERDATA_nTablet_get(void * jarg1) {
  unsigned char jresult ;
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  result = (BYTE) ((arg1)->nTablet);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_SLIDERDATA_nControl_set(void * jarg1, unsigned char jarg2) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nControl = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_SLIDERDATA_nControl_get(void * jarg1) {
  unsigned char jresult ;
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  result = (BYTE) ((arg1)->nControl);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_SLIDERDATA_nMode_set(void * jarg1, unsigned char jarg2) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nMode = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_SLIDERDATA_nMode_get(void * jarg1) {
  unsigned char jresult ;
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  result = (BYTE) ((arg1)->nMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_SLIDERDATA_nReserved_set(void * jarg1, unsigned char jarg2) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->nReserved = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_SLIDERDATA_nReserved_get(void * jarg1) {
  unsigned char jresult ;
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  BYTE result;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  result = (BYTE) ((arg1)->nReserved);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_SLIDERDATA_nPosition_set(void * jarg1, unsigned long jarg2) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->nPosition = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_SLIDERDATA_nPosition_get(void * jarg1) {
  unsigned long jresult ;
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  DWORD result;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  result = (DWORD) ((arg1)->nPosition);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_SLIDERDATA() {
  void * jresult ;
  tagSLIDERDATA *result = 0 ;
  
  result = (tagSLIDERDATA *)new tagSLIDERDATA();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_SLIDERDATA(void * jarg1) {
  tagSLIDERDATA *arg1 = (tagSLIDERDATA *) 0 ;
  
  arg1 = (tagSLIDERDATA *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_version_set(void * jarg1, unsigned char jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->version = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXTPROPERTY_version_get(void * jarg1) {
  unsigned char jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (BYTE) ((arg1)->version);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_tabletIndex_set(void * jarg1, unsigned char jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->tabletIndex = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXTPROPERTY_tabletIndex_get(void * jarg1) {
  unsigned char jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (BYTE) ((arg1)->tabletIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_controlIndex_set(void * jarg1, unsigned char jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->controlIndex = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXTPROPERTY_controlIndex_get(void * jarg1) {
  unsigned char jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (BYTE) ((arg1)->controlIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_functionIndex_set(void * jarg1, unsigned char jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (BYTE)jarg2; 
  if (arg1) (arg1)->functionIndex = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Swig_EXTPROPERTY_functionIndex_get(void * jarg1) {
  unsigned char jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (BYTE) ((arg1)->functionIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_propertyID_set(void * jarg1, unsigned short jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  WORD arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (WORD)jarg2; 
  if (arg1) (arg1)->propertyID = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_Swig_EXTPROPERTY_propertyID_get(void * jarg1) {
  unsigned short jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  WORD result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (WORD) ((arg1)->propertyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_reserved_set(void * jarg1, unsigned short jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  WORD arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (WORD)jarg2; 
  if (arg1) (arg1)->reserved = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_Swig_EXTPROPERTY_reserved_get(void * jarg1) {
  unsigned short jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  WORD result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (WORD) ((arg1)->reserved);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_dataSize_set(void * jarg1, unsigned long jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dataSize = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_EXTPROPERTY_dataSize_get(void * jarg1) {
  unsigned long jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  DWORD result;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (DWORD) ((arg1)->dataSize);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_EXTPROPERTY_data_set(void * jarg1, void * jarg2) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE *arg2 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  arg2 = (BYTE *)jarg2; 
  {
    size_t ii;
    BYTE *b = (BYTE *) arg1->data;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((BYTE *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_EXTPROPERTY_data_get(void * jarg1) {
  void * jresult ;
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  BYTE *result = 0 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  result = (BYTE *)(BYTE *) ((arg1)->data);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_EXTPROPERTY() {
  void * jresult ;
  tagEXTPROPERTY *result = 0 ;
  
  result = (tagEXTPROPERTY *)new tagEXTPROPERTY();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_EXTPROPERTY(void * jarg1) {
  tagEXTPROPERTY *arg1 = (tagEXTPROPERTY *) 0 ;
  
  arg1 = (tagEXTPROPERTY *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_CONTROLCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_FUNCCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_AVAILABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_OVERRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_OVERRIDE_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_OVERRIDE_ICON_get() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_ICON_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_ICON_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_ICON_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_PROPERTY_LOCATION_get() {
  int jresult ;
  int result;
  
  result = (int)(11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_ICON_FMT_NONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_ICON_FMT_4BPP_GRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_LOC_LEFT_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_LOC_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_LOC_TOP_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_LOC_BOTTOM_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_TABLET_LOC_TRANSDUCER_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_WTInfoA(unsigned int jarg1, unsigned int jarg2, void * jarg3) {
  unsigned int jresult ;
  UINT arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  UINT result;
  
  arg1 = (UINT)jarg1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (UINT)WTInfoA(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTInfoA_get() {
  int jresult ;
  int result;
  
  result = (int)(20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_WTInfoW(unsigned int jarg1, unsigned int jarg2, void * jarg3) {
  unsigned int jresult ;
  UINT arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  UINT result;
  
  arg1 = (UINT)jarg1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (UINT)WTInfoW(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTInfoW_get() {
  int jresult ;
  int result;
  
  result = (int)(1020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTInfo_get() {
  int jresult ;
  int result;
  
  result = (int)(20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTOpenA(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  HWND arg1 ;
  LPLOGCONTEXTA arg2 = (LPLOGCONTEXTA) 0 ;
  BOOL arg3 ;
  HWND *argp1 ;
  HCTX result;
  
  argp1 = (HWND *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTA)jarg2; 
  arg3 = (BOOL)jarg3; 
  result = WTOpenA(arg1,arg2,arg3);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTOpenA_get() {
  int jresult ;
  int result;
  
  result = (int)(21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTOpenW(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  HWND arg1 ;
  LPLOGCONTEXTW arg2 = (LPLOGCONTEXTW) 0 ;
  BOOL arg3 ;
  HWND *argp1 ;
  HCTX result;
  
  argp1 = (HWND *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTW)jarg2; 
  arg3 = (BOOL)jarg3; 
  result = WTOpenW(arg1,arg2,arg3);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTOpenW_get() {
  int jresult ;
  int result;
  
  result = (int)(1021);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTOpen_get() {
  int jresult ;
  int result;
  
  result = (int)(21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTClose(void * jarg1) {
  int jresult ;
  HCTX arg1 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (BOOL)WTClose(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTClose_get() {
  int jresult ;
  int result;
  
  result = (int)(22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTPacketsGet(void * jarg1, int jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  int arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HCTX *argp1 ;
  int result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (int)WTPacketsGet(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTPacketsGet_get() {
  int jresult ;
  int result;
  
  result = (int)(23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTPacket(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (BOOL)WTPacket(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTPacket_get() {
  int jresult ;
  int result;
  
  result = (int)(24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTEnable(void * jarg1, int jarg2) {
  int jresult ;
  HCTX arg1 ;
  BOOL arg2 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (BOOL)jarg2; 
  result = (BOOL)WTEnable(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTEnable_get() {
  int jresult ;
  int result;
  
  result = (int)(40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTOverlap(void * jarg1, int jarg2) {
  int jresult ;
  HCTX arg1 ;
  BOOL arg2 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (BOOL)jarg2; 
  result = (BOOL)WTOverlap(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTOverlap_get() {
  int jresult ;
  int result;
  
  result = (int)(41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTConfig(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  HWND arg2 ;
  HCTX *argp1 ;
  HWND *argp2 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  argp2 = (HWND *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (BOOL)WTConfig(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTConfig_get() {
  int jresult ;
  int result;
  
  result = (int)(60);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTGetA(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  LPLOGCONTEXTA arg2 = (LPLOGCONTEXTA) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTA)jarg2; 
  result = (BOOL)WTGetA(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTGetA_get() {
  int jresult ;
  int result;
  
  result = (int)(61);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTGetW(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  LPLOGCONTEXTW arg2 = (LPLOGCONTEXTW) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTW)jarg2; 
  result = (BOOL)WTGetW(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTGetW_get() {
  int jresult ;
  int result;
  
  result = (int)(1061);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTGet_get() {
  int jresult ;
  int result;
  
  result = (int)(61);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTSetA(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  LPLOGCONTEXTA arg2 = (LPLOGCONTEXTA) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTA)jarg2; 
  result = (BOOL)WTSetA(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTSetA_get() {
  int jresult ;
  int result;
  
  result = (int)(62);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTSetW(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  LPLOGCONTEXTW arg2 = (LPLOGCONTEXTW) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPLOGCONTEXTW)jarg2; 
  result = (BOOL)WTSetW(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTSetW_get() {
  int jresult ;
  int result;
  
  result = (int)(1062);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTSet_get() {
  int jresult ;
  int result;
  
  result = (int)(62);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTExtGet(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (BOOL)WTExtGet(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTExtGet_get() {
  int jresult ;
  int result;
  
  result = (int)(63);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTExtSet(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (BOOL)WTExtSet(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTExtSet_get() {
  int jresult ;
  int result;
  
  result = (int)(64);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTSave(void * jarg1, void * jarg2) {
  int jresult ;
  HCTX arg1 ;
  LPVOID arg2 = (LPVOID) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPVOID)jarg2; 
  result = (BOOL)WTSave(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTSave_get() {
  int jresult ;
  int result;
  
  result = (int)(65);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTRestore(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  HWND arg1 ;
  LPVOID arg2 = (LPVOID) 0 ;
  BOOL arg3 ;
  HWND *argp1 ;
  HCTX result;
  
  argp1 = (HWND *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (LPVOID)jarg2; 
  arg3 = (BOOL)jarg3; 
  result = WTRestore(arg1,arg2,arg3);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTRestore_get() {
  int jresult ;
  int result;
  
  result = (int)(66);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTPacketsPeek(void * jarg1, int jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  int arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HCTX *argp1 ;
  int result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (int)WTPacketsPeek(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTPacketsPeek_get() {
  int jresult ;
  int result;
  
  result = (int)(80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDataGet(void * jarg1, unsigned int jarg2, unsigned int jarg3, int jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  HCTX arg1 ;
  UINT arg2 ;
  UINT arg3 ;
  int arg4 ;
  LPVOID arg5 = (LPVOID) 0 ;
  LPINT arg6 = (LPINT) 0 ;
  HCTX *argp1 ;
  int result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (UINT)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (LPVOID)jarg5; 
  arg6 = (LPINT)jarg6; 
  result = (int)WTDataGet(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTDataGet_get() {
  int jresult ;
  int result;
  
  result = (int)(81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTDataPeek(void * jarg1, unsigned int jarg2, unsigned int jarg3, int jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  HCTX arg1 ;
  UINT arg2 ;
  UINT arg3 ;
  int arg4 ;
  LPVOID arg5 = (LPVOID) 0 ;
  LPINT arg6 = (LPINT) 0 ;
  HCTX *argp1 ;
  int result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (UINT)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (LPVOID)jarg5; 
  arg6 = (LPINT)jarg6; 
  result = (int)WTDataPeek(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTDataPeek_get() {
  int jresult ;
  int result;
  
  result = (int)(82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTQueueSizeGet(void * jarg1) {
  int jresult ;
  HCTX arg1 ;
  HCTX *argp1 ;
  int result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (int)WTQueueSizeGet(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTQueueSizeGet_get() {
  int jresult ;
  int result;
  
  result = (int)(84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTQueueSizeSet(void * jarg1, int jarg2) {
  int jresult ;
  HCTX arg1 ;
  int arg2 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  result = (BOOL)WTQueueSizeSet(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTQueueSizeSet_get() {
  int jresult ;
  int result;
  
  result = (int)(85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrOpen(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  HWND arg1 ;
  UINT arg2 ;
  HWND *argp1 ;
  HMGR result;
  
  argp1 = (HWND *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  result = WTMgrOpen(arg1,arg2);
  jresult = new HMGR((const HMGR &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrOpen_get() {
  int jresult ;
  int result;
  
  result = (int)(100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrClose(void * jarg1) {
  int jresult ;
  HMGR arg1 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (BOOL)WTMgrClose(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrClose_get() {
  int jresult ;
  int result;
  
  result = (int)(101);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrContextEnum(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  HMGR arg1 ;
  WTENUMPROC arg2 = (WTENUMPROC) 0 ;
  LPARAM arg3 ;
  HMGR *argp1 ;
  LPARAM *argp3 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (WTENUMPROC)jarg2; 
  argp3 = (LPARAM *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null LPARAM", 0);
    return 0;
  }
  arg3 = *argp3; 
  result = (BOOL)WTMgrContextEnum(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrContextEnum_get() {
  int jresult ;
  int result;
  
  result = (int)(120);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrContextOwner(void * jarg1, void * jarg2) {
  void * jresult ;
  HMGR arg1 ;
  HCTX arg2 ;
  HMGR *argp1 ;
  HCTX *argp2 ;
  HWND result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  argp2 = (HCTX *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = WTMgrContextOwner(arg1,arg2);
  jresult = new HWND((const HWND &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrContextOwner_get() {
  int jresult ;
  int result;
  
  result = (int)(121);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrDefContext(void * jarg1, int jarg2) {
  void * jresult ;
  HMGR arg1 ;
  BOOL arg2 ;
  HMGR *argp1 ;
  HCTX result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (BOOL)jarg2; 
  result = WTMgrDefContext(arg1,arg2);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrDefContext_get() {
  int jresult ;
  int result;
  
  result = (int)(122);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrDefContextEx(void * jarg1, unsigned int jarg2, int jarg3) {
  void * jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  BOOL arg3 ;
  HMGR *argp1 ;
  HCTX result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (BOOL)jarg3; 
  result = WTMgrDefContextEx(arg1,arg2,arg3);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrDefContextEx_get() {
  int jresult ;
  int result;
  
  result = (int)(206);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_WTMgrDeviceConfig(void * jarg1, unsigned int jarg2, void * jarg3) {
  unsigned int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  HWND arg3 ;
  HMGR *argp1 ;
  HWND *argp3 ;
  UINT result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  argp3 = (HWND *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWND", 0);
    return 0;
  }
  arg3 = *argp3; 
  result = (UINT)WTMgrDeviceConfig(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrDeviceConfig_get() {
  int jresult ;
  int result;
  
  result = (int)(140);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrExt(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  LPVOID arg3 = (LPVOID) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPVOID)jarg3; 
  result = (BOOL)WTMgrExt(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrExt_get() {
  int jresult ;
  int result;
  
  result = (int)(180);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrEnable(void * jarg1, unsigned int jarg2, int jarg3) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  BOOL arg3 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (BOOL)jarg3; 
  result = (BOOL)WTMgrCsrEnable(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrEnable_get() {
  int jresult ;
  int result;
  
  result = (int)(181);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrButtonMap(void * jarg1, unsigned int jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  LPBYTE arg3 = (LPBYTE) 0 ;
  LPBYTE arg4 = (LPBYTE) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (LPBYTE)jarg3; 
  arg4 = (LPBYTE)jarg4; 
  result = (BOOL)WTMgrCsrButtonMap(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrButtonMap_get() {
  int jresult ;
  int result;
  
  result = (int)(182);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrPressureBtnMarks(void * jarg1, unsigned int jarg2, unsigned long jarg3, unsigned long jarg4) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  DWORD arg3 ;
  DWORD arg4 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (DWORD)jarg3; 
  arg4 = (DWORD)jarg4; 
  result = (BOOL)WTMgrCsrPressureBtnMarks(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrPressureBtnMarks_get() {
  int jresult ;
  int result;
  
  result = (int)(183);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrPressureResponse(void * jarg1, unsigned int jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  UINT *arg3 = (UINT *) 0 ;
  UINT *arg4 = (UINT *) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (UINT *)jarg3; 
  arg4 = (UINT *)jarg4; 
  result = (BOOL)WTMgrCsrPressureResponse(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrPressureResponse_get() {
  int jresult ;
  int result;
  
  result = (int)(184);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrExt(void * jarg1, unsigned int jarg2, unsigned int jarg3, void * jarg4) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  UINT arg3 ;
  LPVOID arg4 = (LPVOID) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (UINT)jarg3; 
  arg4 = (LPVOID)jarg4; 
  result = (BOOL)WTMgrCsrExt(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrExt_get() {
  int jresult ;
  int result;
  
  result = (int)(185);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTQueuePacketsEx(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  HCTX arg1 ;
  UINT *arg2 = (UINT *) 0 ;
  UINT *arg3 = (UINT *) 0 ;
  HCTX *argp1 ;
  BOOL result;
  
  argp1 = (HCTX *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT *)jarg2; 
  arg3 = (UINT *)jarg3; 
  result = (BOOL)WTQueuePacketsEx(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTQueuePacketsEx_get() {
  int jresult ;
  int result;
  
  result = (int)(200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrConfigReplaceExA(void * jarg1, int jarg2, char * jarg3, char * jarg4) {
  int jresult ;
  HMGR arg1 ;
  BOOL arg2 ;
  LPSTR arg3 = (LPSTR) 0 ;
  LPSTR arg4 = (LPSTR) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (BOOL)jarg2; 
  arg3 = (LPSTR)jarg3; 
  arg4 = (LPSTR)jarg4; 
  result = (BOOL)WTMgrConfigReplaceExA(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrConfigReplaceExA_get() {
  int jresult ;
  int result;
  
  result = (int)(202);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrConfigReplaceExW(void * jarg1, int jarg2, void * jarg3, char * jarg4) {
  int jresult ;
  HMGR arg1 ;
  BOOL arg2 ;
  LPWSTR arg3 ;
  LPSTR arg4 = (LPSTR) 0 ;
  HMGR *argp1 ;
  LPWSTR *argp3 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (BOOL)jarg2; 
  argp3 = (LPWSTR *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null LPWSTR", 0);
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (LPSTR)jarg4; 
  result = (BOOL)WTMgrConfigReplaceExW(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrConfigReplaceExW_get() {
  int jresult ;
  int result;
  
  result = (int)(1202);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrConfigReplaceEx_get() {
  int jresult ;
  int result;
  
  result = (int)(202);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrPacketHookExA(void * jarg1, int jarg2, char * jarg3, char * jarg4) {
  void * jresult ;
  HMGR arg1 ;
  int arg2 ;
  LPSTR arg3 = (LPSTR) 0 ;
  LPSTR arg4 = (LPSTR) 0 ;
  HMGR *argp1 ;
  HWTHOOK result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = (LPSTR)jarg3; 
  arg4 = (LPSTR)jarg4; 
  result = WTMgrPacketHookExA(arg1,arg2,arg3,arg4);
  jresult = new HWTHOOK((const HWTHOOK &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrPacketHookExA_get() {
  int jresult ;
  int result;
  
  result = (int)(203);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrPacketHookExW(void * jarg1, int jarg2, void * jarg3, char * jarg4) {
  void * jresult ;
  HMGR arg1 ;
  int arg2 ;
  LPWSTR arg3 ;
  LPSTR arg4 = (LPSTR) 0 ;
  HMGR *argp1 ;
  LPWSTR *argp3 ;
  HWTHOOK result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  argp3 = (LPWSTR *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null LPWSTR", 0);
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (LPSTR)jarg4; 
  result = WTMgrPacketHookExW(arg1,arg2,arg3,arg4);
  jresult = new HWTHOOK((const HWTHOOK &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrPacketHookExW_get() {
  int jresult ;
  int result;
  
  result = (int)(1203);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrPacketHookEx_get() {
  int jresult ;
  int result;
  
  result = (int)(203);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrPacketUnhook(void * jarg1) {
  int jresult ;
  HWTHOOK arg1 ;
  HWTHOOK *argp1 ;
  BOOL result;
  
  argp1 = (HWTHOOK *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWTHOOK", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (BOOL)WTMgrPacketUnhook(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrPacketUnhook_get() {
  int jresult ;
  int result;
  
  result = (int)(204);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_WTMgrPacketHookNext(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  HWTHOOK arg1 ;
  int arg2 ;
  WPARAM arg3 ;
  LPARAM arg4 ;
  HWTHOOK *argp1 ;
  WPARAM *argp3 ;
  LPARAM *argp4 ;
  LRESULT result;
  
  argp1 = (HWTHOOK *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HWTHOOK", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  argp3 = (WPARAM *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null WPARAM", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (LPARAM *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null LPARAM", 0);
    return 0;
  }
  arg4 = *argp4; 
  result = WTMgrPacketHookNext(arg1,arg2,arg3,arg4);
  jresult = new LRESULT((const LRESULT &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrPacketHookNext_get() {
  int jresult ;
  int result;
  
  result = (int)(205);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_WTMgrCsrPressureBtnMarksEx(void * jarg1, unsigned int jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  HMGR arg1 ;
  UINT arg2 ;
  UINT *arg3 = (UINT *) 0 ;
  UINT *arg4 = (UINT *) 0 ;
  HMGR *argp1 ;
  BOOL result;
  
  argp1 = (HMGR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HMGR", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (UINT)jarg2; 
  arg3 = (UINT *)jarg3; 
  arg4 = (UINT *)jarg4; 
  result = (BOOL)WTMgrCsrPressureBtnMarksEx(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_ORD_WTMgrCsrPressureBtnMarksEx_get() {
  int jresult ;
  int result;
  
  result = (int)(201);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKETDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(0xFFFF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKETMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0xFFFF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKETEXPKEYS_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKETTOUCHSTRIP_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKETTOUCHRING_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig___DATA_get() {
  int jresult ;
  int result;
  
  result = (int)((0xFFFF));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig___MODE_get() {
  int jresult ;
  int result;
  
  result = (int)((0xFFFF));
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkContext_set(void * jarg1, void * jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  HCTX arg2 ;
  HCTX *argp2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  argp2 = (HCTX *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null HCTX", 0);
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->pkContext = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKET_pkContext_get(void * jarg1) {
  void * jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  HCTX result;
  
  arg1 = (tagPACKET *)jarg1; 
  result =  ((arg1)->pkContext);
  jresult = new HCTX((const HCTX &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkStatus_set(void * jarg1, unsigned int jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->pkStatus = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_PACKET_pkStatus_get(void * jarg1) {
  unsigned int jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (UINT) ((arg1)->pkStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkTime_set(void * jarg1, unsigned long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->pkTime = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_PACKET_pkTime_get(void * jarg1) {
  unsigned long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  DWORD result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (DWORD) ((arg1)->pkTime);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkChanged_set(void * jarg1, unsigned long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  WTPKT arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (WTPKT)jarg2; 
  if (arg1) (arg1)->pkChanged = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_PACKET_pkChanged_get(void * jarg1) {
  unsigned long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  WTPKT result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (WTPKT) ((arg1)->pkChanged);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkSerialNumber_set(void * jarg1, unsigned int jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->pkSerialNumber = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_PACKET_pkSerialNumber_get(void * jarg1) {
  unsigned int jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (UINT) ((arg1)->pkSerialNumber);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkCursor_set(void * jarg1, unsigned int jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->pkCursor = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Swig_PACKET_pkCursor_get(void * jarg1) {
  unsigned int jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  UINT result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (UINT) ((arg1)->pkCursor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkButtons_set(void * jarg1, unsigned long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  DWORD arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->pkButtons = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_Swig_PACKET_pkButtons_get(void * jarg1) {
  unsigned long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  DWORD result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (DWORD) ((arg1)->pkButtons);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkX_set(void * jarg1, long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->pkX = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_PACKET_pkX_get(void * jarg1) {
  long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (LONG) ((arg1)->pkX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkY_set(void * jarg1, long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->pkY = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_PACKET_pkY_get(void * jarg1) {
  long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (LONG) ((arg1)->pkY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkZ_set(void * jarg1, long jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (LONG)jarg2; 
  if (arg1) (arg1)->pkZ = arg2;
}


SWIGEXPORT long SWIGSTDCALL CSharp_Swig_PACKET_pkZ_get(void * jarg1) {
  long jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  LONG result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (LONG) ((arg1)->pkZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkNormalPressure_set(void * jarg1, int jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  int arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->pkNormalPressure = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKET_pkNormalPressure_get(void * jarg1) {
  int jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  int result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (int) ((arg1)->pkNormalPressure);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkTangentPressure_set(void * jarg1, int jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  int arg2 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->pkTangentPressure = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Swig_PACKET_pkTangentPressure_get(void * jarg1) {
  int jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  int result;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (int) ((arg1)->pkTangentPressure);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkOrientation_set(void * jarg1, void * jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  ORIENTATION *arg2 = (ORIENTATION *) 0 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (ORIENTATION *)jarg2; 
  if (arg1) (arg1)->pkOrientation = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKET_pkOrientation_get(void * jarg1) {
  void * jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  ORIENTATION *result = 0 ;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (ORIENTATION *)& ((arg1)->pkOrientation);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKET_pkRotation_set(void * jarg1, void * jarg2) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  ROTATION *arg2 = (ROTATION *) 0 ;
  
  arg1 = (tagPACKET *)jarg1; 
  arg2 = (ROTATION *)jarg2; 
  if (arg1) (arg1)->pkRotation = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKET_pkRotation_get(void * jarg1) {
  void * jresult ;
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  ROTATION *result = 0 ;
  
  arg1 = (tagPACKET *)jarg1; 
  result = (ROTATION *)& ((arg1)->pkRotation);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_PACKET() {
  void * jresult ;
  tagPACKET *result = 0 ;
  
  result = (tagPACKET *)new tagPACKET();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_PACKET(void * jarg1) {
  tagPACKET *arg1 = (tagPACKET *) 0 ;
  
  arg1 = (tagPACKET *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKETEXT_pkBase_set(void * jarg1, void * jarg2) {
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  EXTENSIONBASE *arg2 = (EXTENSIONBASE *) 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  arg2 = (EXTENSIONBASE *)jarg2; 
  if (arg1) (arg1)->pkBase = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKETEXT_pkBase_get(void * jarg1) {
  void * jresult ;
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  EXTENSIONBASE *result = 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  result = (EXTENSIONBASE *)& ((arg1)->pkBase);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKETEXT_pkExpKeys_set(void * jarg1, void * jarg2) {
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  EXPKEYSDATA *arg2 = (EXPKEYSDATA *) 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  arg2 = (EXPKEYSDATA *)jarg2; 
  if (arg1) (arg1)->pkExpKeys = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKETEXT_pkExpKeys_get(void * jarg1) {
  void * jresult ;
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  EXPKEYSDATA *result = 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  result = (EXPKEYSDATA *)& ((arg1)->pkExpKeys);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKETEXT_pkTouchStrip_set(void * jarg1, void * jarg2) {
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  SLIDERDATA *arg2 = (SLIDERDATA *) 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  arg2 = (SLIDERDATA *)jarg2; 
  if (arg1) (arg1)->pkTouchStrip = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKETEXT_pkTouchStrip_get(void * jarg1) {
  void * jresult ;
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  SLIDERDATA *result = 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  result = (SLIDERDATA *)& ((arg1)->pkTouchStrip);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_PACKETEXT_pkTouchRing_set(void * jarg1, void * jarg2) {
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  SLIDERDATA *arg2 = (SLIDERDATA *) 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  arg2 = (SLIDERDATA *)jarg2; 
  if (arg1) (arg1)->pkTouchRing = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_PACKETEXT_pkTouchRing_get(void * jarg1) {
  void * jresult ;
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  SLIDERDATA *result = 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  result = (SLIDERDATA *)& ((arg1)->pkTouchRing);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Swig_new_PACKETEXT() {
  void * jresult ;
  tagPACKETEXT *result = 0 ;
  
  result = (tagPACKETEXT *)new tagPACKETEXT();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Swig_delete_PACKETEXT(void * jarg1) {
  tagPACKETEXT *arg1 = (tagPACKETEXT *) 0 ;
  
  arg1 = (tagPACKETEXT *)jarg1; 
  delete arg1;
}


#ifdef __cplusplus
}
#endif

